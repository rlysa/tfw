from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from db.db_request.group_composition import get_group_composition
from resource.keyboards.action_selection_menu_kb import get_action_selection_menu
from ..forms import Form
import logging

router = Router(name="action_selection_menu_router")
logger = logging.getLogger(__name__)


@router.message(Command("menu"))
async def show_main_menu(message: Message, state: FSMContext):
    await message.answer(
        "üìå <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_action_selection_menu()
    )
    await state.set_state(Form.main_menu)


@router.callback_query(F.data == "show_my_group")
async def handle_show_my_group(callback: CallbackQuery, state: FSMContext):
    try:
        username = callback.from_user.username
        group_data = get_group_composition(username)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é

        if not group_data or not group_data['current_user_in_group']:
            await callback.answer("‚ÑπÔ∏è –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ")
            return

        await callback.message.edit_text(
            text=f"üë• <b>–ì—Ä—É–ø–ø–∞:</b> {group_data['group_name']}\n"
                 f"üë®‚Äçüíº <b>–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å:</b> {group_data['admin_info']['full_name']}\n"
                 "üìå <b>–°—Ç–∞–∂—ë—Ä—ã:</b>\n" +
                 "\n".join([f"{i}. {i['full_name']}" for i in group_data['interns_info']]),
            reply_markup=get_group_composition_kb()
        )
        await callback.answer()
    except Exception as e:
        logger.error(f"Error showing group: {e}")
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥—Ä—É–ø–ø—ã")