#–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –¥–µ–¥–ª–∞–π–Ω–∞–º)

from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from ..forms import Form
from db.db_request.list_tasks import list_tasks
from ...keyboards.list_of_tasks_kb import list_of_tasks_kb

router = Router(name="view_the_task_list_router")  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è —Ä–æ—É—Ç–µ—Ä–∞


@router.callback_query(Form.view_the_task_list)
async def view_task_list(callback: CallbackQuery, state: FSMContext):
    user_data = await state.get_data()
    username = user_data.get('username')

    keyboard = list_of_tasks_kb(username)

    if not keyboard:
        await callback.message.edit_text("üéâ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á!")
    else:
        await callback.message.edit_text(
            "üìã –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏:",
            reply_markup=keyboard
        )


@router.message(Form.view_the_task_list)
async def handle_task_list_message(message: Message, state: FSMContext):
    if message.text.lower() == '–Ω–∞–∑–∞–¥':
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        await state.set_state(Form.main_intern)