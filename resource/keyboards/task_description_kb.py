# keyboards/task_description_kb.py
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

def get_task_description_kb(task_id: int, is_done: bool) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–µ–π
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å" if not is_done else "üîÑ –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å",
                callback_data=f"change_status_{task_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìù –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç",
                callback_data=f"report_options_{task_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
                callback_data="back_to_tasks_list"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_report_options_kb(task_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="üìù –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç",
                callback_data=f"text_report_{task_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìÅ –§–∞–π–ª–æ–≤—ã–π –æ—Ç—á–µ—Ç",
                callback_data=f"file_report_{task_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîô –ù–∞–∑–∞–¥ –∫ –∑–∞–¥–∞—á–µ",
                callback_data=f"view_task_{task_id}"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)