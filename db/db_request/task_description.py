import sqlite3
from typing import Optional, Tuple
from config import DB_NAME
import logging

logger = logging.getLogger(__name__)


def get_task_description(task_id: int) -> Optional[Tuple[str, str, str, str]]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø–æ –µ—ë ID

    Args:
        task_id: ID –∑–∞–¥–∞—á–∏

    Returns:
        –ö–æ—Ä—Ç–µ–∂ (name, description, deadline, status) –∏–ª–∏ None –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    """
    try:
        with sqlite3.connect(DB_NAME) as conn:
            cursor = conn.cursor()
            cursor.execute("""
                SELECT name, description, deadline, done 
                FROM Tasks 
                WHERE id = ?
            """, (task_id,))

            task = cursor.fetchone()
            if task:
                name, description, deadline, done = task
                status = "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞" if done else "üîÑ –í —Ä–∞–±–æ—Ç–µ"
                return name, description, deadline, status
            return None

    except sqlite3.Error as e:
        logger.error(f"Database error in get_task_description: {e}")
        return None
    except Exception as e:
        logger.error(f"Unexpected error in get_task_description: {e}")
        return None


def change_task_status(task_id: int) -> bool:
    """
    –ò–∑–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π

    Args:
        task_id: ID –∑–∞–¥–∞—á–∏

    Returns:
        True –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, False –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    try:
        with sqlite3.connect(DB_NAME) as conn:
            cursor = conn.cursor()
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
            cursor.execute("SELECT done FROM Tasks WHERE id = ?", (task_id,))
            current_status = cursor.fetchone()[0]

            # –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å
            new_status = not current_status
            cursor.execute(
                "UPDATE Tasks SET done = ? WHERE id = ?",
                (new_status, task_id)
            )
            conn.commit()
            return True
    except sqlite3.Error as e:
        logger.error(f"Database error in change_task_status: {e}")
        return False
    except Exception as e:
        logger.error(f"Unexpected error in change_task_status: {e}")
        return False